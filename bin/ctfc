#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/ctfc'
require 'optimist'

opts = Optimist.options do
  version "Crypto To Fiat Currency\n".cyan.bold \
          + "Gem Version: #{CTFC::VERSION}"

  banner ''
  banner ' Enter fiat currencies with/out additional arguments:'
  banner ''
  banner '  ruby bin/ctfc eur'
  banner '  ruby bin/ctfc eur usd --no-save --coins btc xmr ltc'
  banner ''

  opt :coins,     'Set crypto coins', default: CTFC::CONFIG::COINS
  opt :no_save,   "Do not save '.csv' output"
  opt :no_print,  'Do not print terminal output'
  opt :loop,      'Run script N times',           default: 1, type: :integer
  opt :wait,      'Wait N seconds between loop',  default: 0, type: :integer
end

coins = opts[:coins]
save  = opts[:no_save]  ? false : true
print = opts[:no_print] ? false : true

@crypto = Ctfc.new

if ARGV.empty?

  # default behavior without arguments - change to suit your needs
  @crypto.get(:eur, save: false, print: true, coins: coins)

else

  opts[:loop].times do
    ARGV.each do |fiat|
      next if opts.include?(fiat.downcase)

      # in Ruby 3.1: @crypto.get(fiat, save:, print:, coins:)
      @crypto.get(fiat,
                  save: save,
                  print: print,
                  coins: coins)
      sleep 1 # wait between requests
    end

    # end if no `--loop` arg
    next unless opts[:loop] > 1

    # pause between loops
    sleep opts[:wait]

    # clear screen - depending on OS
    system 'clear' or system 'cls'
  end
end
